"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.descriptions = void 0;
const aiInvoiceParse = __importStar(require("./actions/aiInvoiceParser"));
const mergePdf = __importStar(require("./actions/mergePdf"));
const splitPdf = __importStar(require("./actions/splitPdf"));
const htmlToPDF = __importStar(require("./actions/htmlToPDF"));
const convertToPDF = __importStar(require("./actions/convertToPDF"));
const convertFromPDF = __importStar(require("./actions/convertFromPDF"));
const addTextImagesToPDF = __importStar(require("./actions/addTextImagesToPDF"));
const fillPdfForm = __importStar(require("./actions/fillPdfForm"));
const pdfInfo = __importStar(require("./actions/pdfInfo"));
const compressPdf = __importStar(require("./actions/compressPdf"));
const pdfSecurity = __importStar(require("./actions/pdfSecurity"));
const rotatePdf = __importStar(require("./actions/rotatePdf"));
const deletePdfPages = __importStar(require("./actions/deletePdfPages"));
const searchPdf = __importStar(require("./actions/searchPdf"));
const editPdf = __importStar(require("./actions/searchAndReplaceDelete"));
const barcodeReader = __importStar(require("./actions/barcodeReader"));
const barcodeGenerator = __importStar(require("./actions/barcodeGenerator"));
const makePdfSearchable = __importStar(require("./actions/makePdfSearchable"));
const uploadFile = __importStar(require("./actions/uploadFile"));
const GenericFunctions_1 = require("./GenericFunctions");
exports.descriptions = {
    displayName: 'PDF.co Api',
    name: 'PDFco Api',
    description: 'Generate PDF, extract data from PDF, split PDF, merge PDF, convert PDF. Fill PDF forms, add text and images to pdf and much more with pdf.co!',
    defaults: {
        name: 'PDFco Api',
    },
    group: ['transform'],
    icon: 'file:pdfco.svg',
    inputs: ['main'],
    outputs: ['main'],
    credentials: [
        {
            name: 'pdfcoApi',
            required: true,
        },
    ],
    properties: [
        {
            displayName: 'Action',
            name: 'operation',
            type: 'options',
            noDataExpression: true,
            options: [
                {
                    name: 'AI Invoice Parser',
                    description: 'Transform your invoice processing with our advanced AI. Enjoy quick, accurate data extraction that eliminates manual effort and saves you valuable time.',
                    value: GenericFunctions_1.ActionConstants.AiInvoiceParser,
                    action: GenericFunctions_1.ActionConstants.AiInvoiceParser,
                },
                {
                    name: 'URL/HTML to PDF',
                    description: 'Convert HTML or URL to PDF with advanced options (e.g. layout, orientation). Supports HTML templates (Handlebar and Mustache).',
                    value: GenericFunctions_1.ActionConstants.UrlHtmlToPDF,
                    action: GenericFunctions_1.ActionConstants.UrlHtmlToPDF,
                },
                {
                    name: 'Merge PDF',
                    description: 'Combine multiple document formats into a single PDF. Supported formats include PDF, DOC, DOCX, XLS, JPG, PNG, and more.',
                    value: GenericFunctions_1.ActionConstants.MergePdf,
                    action: GenericFunctions_1.ActionConstants.MergePdf,
                },
                {
                    name: 'Split PDF',
                    description: 'PDF Splitter that takes PDF file and splits into multiple PDF files using page index, page range, text search or barcode search',
                    value: GenericFunctions_1.ActionConstants.SplitPdf,
                    action: GenericFunctions_1.ActionConstants.SplitPdf,
                },
                {
                    name: 'Convert To PDF',
                    description: 'Convert a variety of formats such as URLs, HTML code, documents, spreadsheets, presentations, images, and more into PDF',
                    value: GenericFunctions_1.ActionConstants.ConvertToPDF,
                    action: GenericFunctions_1.ActionConstants.ConvertToPDF,
                },
                {
                    name: 'Convert From PDF',
                    description: 'Convert PDF pages to structured CSV, XML, JSON, Plain Text, Convert PDF to JPG, PDF to PNG, PDF to TIFF, and more',
                    value: GenericFunctions_1.ActionConstants.ConvertFromPDF,
                    action: GenericFunctions_1.ActionConstants.ConvertFromPDF,
                },
                {
                    name: 'Add Text/Images to PDF',
                    description: 'Add text, images, and annotations to PDF documents with precise positioning and styling options',
                    value: GenericFunctions_1.ActionConstants.AddTextImagesToPDF,
                    action: GenericFunctions_1.ActionConstants.AddTextImagesToPDF,
                },
                {
                    name: 'Fill a PDF Form',
                    description: 'Fill interactive PDF forms with text, checkboxes, and other form elements',
                    value: GenericFunctions_1.ActionConstants.FillPdfForm,
                    action: GenericFunctions_1.ActionConstants.FillPdfForm,
                },
                {
                    name: 'PDF Information & Form Fields',
                    description: 'Extract metadata and form field information from PDF documents',
                    value: GenericFunctions_1.ActionConstants.PDFInfo,
                    action: GenericFunctions_1.ActionConstants.PDFInfo,
                },
                {
                    name: 'Compress PDF',
                    description: 'Reduce PDF file size while maintaining quality',
                    value: GenericFunctions_1.ActionConstants.CompressPdf,
                    action: GenericFunctions_1.ActionConstants.CompressPdf,
                },
                {
                    name: 'PDF Security',
                    description: 'Add or remove password protection and security features from PDF documents',
                    value: GenericFunctions_1.ActionConstants.PDFSecurity,
                    action: GenericFunctions_1.ActionConstants.PDFSecurity,
                },
                {
                    name: 'Rotate PDF Pages',
                    description: 'Rotate PDF pages manually or automatically detect and fix rotation based on text analysis',
                    value: GenericFunctions_1.ActionConstants.RotatePdf,
                    action: GenericFunctions_1.ActionConstants.RotatePdf,
                },
                {
                    name: 'Delete PDF Pages',
                    description: 'Remove specific pages from a PDF document',
                    value: GenericFunctions_1.ActionConstants.DeletePdfPages,
                    action: GenericFunctions_1.ActionConstants.DeletePdfPages,
                },
                {
                    name: 'Search in PDF',
                    description: 'Search for specific text within PDF documents or scanned images',
                    value: GenericFunctions_1.ActionConstants.SearchPdf,
                    action: GenericFunctions_1.ActionConstants.SearchPdf,
                },
                {
                    name: 'Search & Replace Text or Delete',
                    description: 'Search and delete text, replace text, or replace text with images in PDF documents',
                    value: GenericFunctions_1.ActionConstants.SearchAndReplaceDelete,
                },
                {
                    name: 'Barcode Reader',
                    description: 'Decode barcodes from images or PDF documents swiftly and accurately',
                    value: GenericFunctions_1.ActionConstants.BarcodeReader,
                },
                {
                    name: 'Barcode Generator',
                    description: 'Generate various types of barcodes including QR codes, Code 128, Code 39, and more',
                    value: GenericFunctions_1.ActionConstants.BarcodeGenerator,
                },
                {
                    name: 'Make PDF Searchable or Unsearchable',
                    description: 'Convert scanned PDF or image files into text-searchable PDFs using OCR or make them unsearchable/scanned',
                    value: GenericFunctions_1.ActionConstants.MakePdfSearchable,
                },
                {
                    name: 'Upload File',
                    description: 'Upload a file to PDF.co and get a URL',
                    value: GenericFunctions_1.ActionConstants.UploadFile,
                    action: GenericFunctions_1.ActionConstants.UploadFile,
                }
            ],
            default: 'AI Invoice Parser',
        },
        ...aiInvoiceParse.description,
        ...htmlToPDF.description,
        ...mergePdf.description,
        ...splitPdf.description,
        ...convertToPDF.description,
        ...convertFromPDF.description,
        ...addTextImagesToPDF.description,
        ...fillPdfForm.description,
        ...pdfInfo.description,
        ...compressPdf.description,
        ...pdfSecurity.description,
        ...rotatePdf.description,
        ...deletePdfPages.description,
        ...searchPdf.description,
        ...editPdf.description,
        ...barcodeReader.description,
        ...barcodeGenerator.description,
        ...makePdfSearchable.description,
        ...uploadFile.description,
    ],
    subtitle: '={{$parameter["operation"]}}',
    version: 1,
};
//# sourceMappingURL=Descriptions.js.map